[{"id":"c55e588b.b6d628","type":"http in","z":"e89cbddc.85a5d","name":"/time","url":"/time","method":"get","swaggerDoc":"","x":107.5,"y":211,"wires":[["bd0209a9.625708"]]},{"id":"c4583c8b.e06d4","type":"http response","z":"e89cbddc.85a5d","name":"HTTP Response","x":987.5000152587891,"y":299.7500057220459,"wires":[]},{"id":"3ed3b103.fb956e","type":"function","z":"e89cbddc.85a5d","name":"Setting HTTP Headers","func":"msg.headers = {\"content-type\" : \"application/json\"};\nreturn msg;","outputs":1,"noerr":0,"x":757.7500114440918,"y":300.0000057220459,"wires":[["c4583c8b.e06d4"]]},{"id":"bd0209a9.625708","type":"function","z":"e89cbddc.85a5d","name":"curr timestamp","func":"var now = new Date();\n\nvar hours = now.getHours();\nvar minutes = now.getMinutes();\n\nif ( hours < 10 )\n{\n    hours = \"0\" + hours;\n}\n\nif ( minutes < 10 )\n{\n    minutes = \"0\" + minutes\n}\n\nmsg.payload = hours+\":\"+minutes;\n\nreturn msg;","outputs":1,"noerr":0,"x":275.5,"y":257,"wires":[["a8f61ce6.6cb8c","25c0b6cb.0bb86a"]]},{"id":"a8f61ce6.6cb8c","type":"template","z":"e89cbddc.85a5d","name":"JSON template","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{\"time\" : \"{{payload}}\"}","x":496.00000762939453,"y":256.7500047683716,"wires":[["3ed3b103.fb956e"]]},{"id":"94e7f2fe.69898","type":"http in","z":"e89cbddc.85a5d","name":"/random","url":"/random","method":"get","swaggerDoc":"","x":84.5,"y":322,"wires":[["5d56a5aa.a3c66c"]]},{"id":"5d56a5aa.a3c66c","type":"random","z":"e89cbddc.85a5d","name":"","low":"1","high":"10","inte":"true","x":240.5,"y":368,"wires":[["4ae9ca69.bfc984","6dea608f.7e94a","b49c28f7.a97e88"]]},{"id":"4ae9ca69.bfc984","type":"template","z":"e89cbddc.85a5d","name":"JSON template","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{\"random\" : {{payload}} }","x":498.50000762939453,"y":369.2500057220459,"wires":[["3ed3b103.fb956e"]]},{"id":"816486dd.1d8598","type":"http in","z":"e89cbddc.85a5d","name":"/page","url":"/page","method":"get","swaggerDoc":"","x":84.5,"y":626.2500076293945,"wires":[["5e0cf531.57033c"]]},{"id":"6dea608f.7e94a","type":"function","z":"e89cbddc.85a5d","name":"Caching random num","func":"flow.set('lastRandomNum', msg.payload);","outputs":"0","noerr":0,"x":512.2500076293945,"y":444.25000762939453,"wires":[]},{"id":"25c0b6cb.0bb86a","type":"function","z":"e89cbddc.85a5d","name":"Caching timestamp","func":"flow.set('lastServerTime', msg.payload);","outputs":"0","noerr":0,"x":505.62500762939453,"y":185.00000381469727,"wires":[]},{"id":"8d5fc6c4.18ef98","type":"template","z":"e89cbddc.85a5d","name":"Generate HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{#lastServerTime}}\nTime last server time request received at {{lastServerTime}}\n{{/lastServerTime}}\n\n{{^lastServerTime}}\nNo server time requests have been received\n{{/lastServerTime}}\n\n<br/>\n{{#lastRandomNum}}\nLast random number request returned {{lastRandomNum}}, which was received at {{lastRandomNumTimestamp}}\n{{/lastRandomNum}}\n\n{{^lastRandomNum}}\nNo requests for random numbers have been received\n{{/lastRandomNum}}","x":529.3750076293945,"y":625.0000076293945,"wires":[["c4583c8b.e06d4"]]},{"id":"5e0cf531.57033c","type":"function","z":"e89cbddc.85a5d","name":"Get cached values","func":"// Get cached timestamp and random num\n\nvar lastServerTime = flow.get('lastServerTime');\nvar lastRandomNum = flow.get('lastRandomNum');\nvar lastRandomNumTimestamp = flow.get('lastRandomNumTimestamp');\n\nmsg.lastServerTime = lastServerTime;\nmsg.lastRandomNum = lastRandomNum;\nmsg.lastRandomNumTimestamp = lastRandomNumTimestamp;\n\nreturn msg;","outputs":1,"noerr":0,"x":290.62500762939453,"y":626.2500076293945,"wires":[["8d5fc6c4.18ef98"]]},{"id":"b49c28f7.a97e88","type":"function","z":"e89cbddc.85a5d","name":"curr timestamp","func":"var now = new Date();\n\nvar hours = now.getHours();\nvar minutes = now.getMinutes();\n\nif ( hours < 10 )\n{\n    hours = \"0\" + hours;\n}\n\nif ( minutes < 10 )\n{\n    minutes = \"0\" + minutes\n}\n\nmsg.payload = hours+\":\"+minutes;\n\nreturn msg;","outputs":1,"noerr":0,"x":265.62500762939453,"y":501.25000762939453,"wires":[["c3eb30fd.49af5"]]},{"id":"c3eb30fd.49af5","type":"function","z":"e89cbddc.85a5d","name":"Caching random num timestamp","func":"flow.set('lastRandomNumTimestamp', msg.payload);\nreturn msg;","outputs":"0","noerr":0,"x":571.875,"y":501.25,"wires":[]}]
